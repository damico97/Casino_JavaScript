Joe Damico Work Log for JavaScript Casino Project

Dec 26, 2018:
	- Started research for working in JavaScript, and using HTML for views
	- Watched a few tutorials for working in this envorinment
	(1 Hour 30 Minutes)

	- Ported the Card Class into JavaScript
	(45 Minutes)

	- Created the initial view for the game, basing it off the tutorial that I watched 
	on YouTube
	(1 Hour)
TOTAL: 3.25 Hours


Dec 27, 2018:
	- Ported the Deck Class into JavaScript, and did the documentation of for the class
	(45 Minutes)

	- Created the Deck View, also having to learn how to create a scrollable view
	(30 Minutes)
TOTAL: 1.25 Hours


Dec 28, 2018:
	- Created a Basic view to show both player's hands, using image views that are hardcoded.
	This was mostly done to prove that the game was working when dealing cards to both players.
	(45 Minutes)
TOTAL: 45 Minutes


Dec 29, 2018:
	- Added the ability to click on the cards to select them and highlight the background to show
	that the cards have been selected.
	(45 Minutes)
TOTAL: 45 Minutes


Jan 1, 2019:
	- Added the table view, having to create my own view handler, similar to a Recycler View in Android
	so I can have any number of cards but also have an index assosiated with each card so we can understand
	which card the user has clicked on.
	(2 Hours)

	- Added the ability for the user to trail a card from it's hand
	(30 Minutes)

	- Created a custom scroll bar for the entire html page so that if the program is ran on a windows maching, 
	the scroll bar doesn't look like it's from Windows 95
	(15 Minutes)

	- Changed the human's hand view to use the custom indexed view adapter that I created for the Table so we don't
	have to use the hardcoded image views for the human's hand. At this time I left the computers hand with the hardcoded
	views because we do not have to click on anything their. It's just for show.
	(45 Mintues)
TOTAL: 3.5 Hours


Jan 4, 2019:
	- The user can now capture cards, had to work out a bunch of bugs, which required me to learn how passing objects works
	in JavaScript.
	(2 Hours 15 Minutes)

	- Created the view for the human's pile
	(30 Minutes)

	- Extended the player's class to handel the pile and making a capture move.
	(15 Minutes)
TOTAL: 3 Hours


Jan 5, 2019:
	- Started testing how to have multiple view pages in the HTML File so we can have multiple views throughout the game
	without loosing all the game data
	(30 Minutes)
TOTAL: 30 Minutes


Jan 6, 2019:
	- Finished the new page view for the console log so we can see everything that happens in the game in text form, similar
	to how you would view the game back in the C++ version.
	(30 Minutes)

	- Now everything the program updates the HTML views for the game board it also writes the board in text form into the consoleLog 
	class so when the user wants to see the console, you can see every status change in the game.
	(30 Minutes)

	- Trouble shot some bugs that arrised, all were fixed.
	(30 Minutes)
TOTAL: 1.5 Hours


Jan 7, 2019:
	- User capturing now records the move in the consoleLog
	(15 Minutes)

	- User trailing now records the move in the consoleLog
	(5 Minutes)

	- Started the creation of a Tournament class to move most of the functions out of the main Casino.js file and into another class 
	to have a much cleaner looking code.
	(10 Minutes)

	- Moved the marjority of the functions out of Casino.js and into the Tournament class and had to check if all the functionallity
	was still working.
	(45 Minutes)
TOTAL: 1.25 Hours


Jan 9, 2019:
	- Did some research on how to create inheritance in JavaScript
	(30 Minutes)
TOTAL: 0.5 Hours


Jan 10, 2019:
	- Started the creation of the Computer Class.
	(15 Minutes)

	- Started writing the findNextMove() function that will modifiy the Move Class (SuggestedMove Class changed later on) to setup
	how any player should play in the next move. As of know the the function can trail the lowest card, capture matching cards and
	can capture loose sets too, with matching cards at the same time.
	(45 Minutes)
TOTAL: 1 Hours


Jan 11, 2019:
	- Created the SuggestedMove class, which is similar to the Move class, but only takes in Abbrervations of the cards to play, so 
	it doesn't set the move, in case the human player doesn't want to follow the advice of the computer. Changed the findNextMove() 
	to use Abbrervations and the SuggestedMove Class instead of the cards themself.
	(45 Minutes)

	- Made the "Computer Move" button to use the logic to create the move, using the new executeMove() Function to convert the 
	abbrervations to find the actual cards to set the move class and execute which ever move the computer chose.
	(30 Minutes)

	- The computer logic can now capture sets of 3 cards whos values add up to the value of ones of it's hand cards.
	(15 Minutes)

	- Documentation on the Card and Deck Classes
	(15 Minutes)

	- The computer now records it move choice in the consoleLog for the record keeping of the game
	(15 Minutes)

	- Created the view for the coin toss page, this was done totally in HTML and CSS so it took a bit
	(1 Hour)
	
	- Started the logic for the coin toss, with the setting functions the the main function to run the toss
	(30 Minutes)

	- Players now alternate, and the user cannot select cards when it is the computers turn 
	(30 Minutes)
TOTAL: 4 Hours


Jan 12, 2019:
	- Game Board now promps the user to who makes the next move
	(15 Minutes)

	- Finshed coin toss functionallity, all is needed is the GUI to show who one the toss. But currently the winner 
	of the toss has the first move of the game.
	(15 Minutes)

	- Finished all coin toss GUI, and functionallity, still will need to change how the game is initalized to allow 
	for serialzation later one.
	(45 Minutes)
	
